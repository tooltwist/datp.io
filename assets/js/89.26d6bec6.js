(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{597:function(t,s,a){"use strict";a.r(s);var e=a(60),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),a("p",[t._v("DATP is configured using a JSON file, which is accessed using\nTooltwist's juice-client package. This npm package allows an\nenvironment to specify where to access the configuration.")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("during development, the config is usually stored in a JSON\nfile on the file system.")])]),t._v(" "),a("li",[a("p",[t._v("if deployed on AWS the config is JSON stored in AWS Secrets Manager.")])])]),t._v(" "),a("p",[t._v("It's common to store your application configuration variables in this same config file.")]),t._v(" "),a("p",[t._v("If you have multiple node groups you will need one configuration\ndefinition for each node group. All nodes within the node group will\nuse the same definition.")]),t._v(" "),a("h2",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"datp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Master DATP node"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"protocol"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"host"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"midiSupported"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nodeGroup"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"master"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"webhook-credentials"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"publicKey"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-----BEGIN PUBLIC KEY-----\\n....\\n-----END PUBLIC KEY-----\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"privateKey"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-----BEGIN PRIVATE KEY-----\\n....\\n-----END PRIVATE KEY-----\\n"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"statePersistanceInterval"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"logDestination"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datadog"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"deltaDestination"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"none"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"keepAliveTimeout"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"headersTimeout"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("66000")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"datadog"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"apikey"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"....."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"appkey"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"....."')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"db"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"host"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"writeHost"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"user"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"password"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"database"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datp_master"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"redis"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"host"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"user"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"harry"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"password"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xyz"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Application specific configuration")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"myApp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br")])]),a("h2",{attrs:{id:"datp-deltadestination"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-deltadestination"}},[t._v("#")]),t._v(" datp.deltaDestination")]),t._v(" "),a("p",[a("code",[t._v("db")]),t._v(" | "),a("code",[t._v("dynamodb")]),t._v(" | "),a("code",[t._v("none")])]),t._v(" "),a("p",[t._v('This defines where DATP will write it\'s transaction journal entries ("deltas").')]),t._v(" "),a("p",[t._v("In most applications this can be set to "),a("code",[t._v("none")]),t._v(" to reduce processing overhead. It is only\nrequired where micro-level tracking of the transaction state is required. For example,\nyou might turn it on for just the node where a specific type of transaction is processed.")]),t._v(" "),a("p",[t._v("During development it can be beneficial to write deltas to the database using the "),a("code",[t._v("db")]),t._v(" option,\nwhere they can easily be viewed or cleared out using PhpMyadin.")]),t._v(" "),a("p",[a("code",[t._v("DynamoDB")]),t._v(" is a fast alternative to the database for production\nenvironments, and provides fallback transaction state information in\ncase of a database failure.")]),t._v(" "),a("p",[t._v("Also, the "),a("code",[t._v("none")]),t._v(" option is useful during performance testing, to determine\nwhich part of system load is caused by saving transaction deltas.")]),t._v(" "),a("h2",{attrs:{id:"datp-description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-description"}},[t._v("#")]),t._v(" datp.description")]),t._v(" "),a("p",[t._v("A string to describe this node group.")]),t._v(" "),a("h2",{attrs:{id:"datp-development"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-development"}},[t._v("#")]),t._v(" datp.development")]),t._v(" "),a("p",[t._v("ZZZZZ")]),t._v(" "),a("h2",{attrs:{id:"datp-headerstimeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-headerstimeout"}},[t._v("#")]),t._v(" datp.headersTimeout")]),t._v(" "),a("p",[t._v("(default=66000)"),a("br"),t._v("\nThis is related to "),a("code",[t._v("keepAliveTimeout")]),t._v(". To prevent the reported 502 errors, this value must be longer than "),a("code",[t._v("keepAliveTimeout")]),t._v(", which\nmust be longer than the timeout of your AWS ALB.")]),t._v(" "),a("h2",{attrs:{id:"datp-host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-host"}},[t._v("#")]),t._v(" datp.host")]),t._v(" "),a("p",[t._v("e.g. localhost")]),t._v(" "),a("p",[t._v("The domain name MONDAT should use to access DATP endpoints.")]),t._v(" "),a("h2",{attrs:{id:"datp-keepalivetimeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-keepalivetimeout"}},[t._v("#")]),t._v(" datp.keepAliveTimeout")]),t._v(" "),a("p",[t._v("(default=65000)"),a("br"),t._v("\nThis value is used to configure Node to not shut down socket of the API endpoint within the specified number of milliseconds.\nWe've added this to provide a workaround for a bug that causes Express, Restify and some other frameworks to\noccassionally return 502 errors under load, when behind an AWS load balancer.")]),t._v(" "),a("p",[t._v("For more details and a full description of the problem, see "),a("a",{attrs:{href:"https://adamcrowder.net/posts/node-express-api-and-aws-alb-502",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dealing with Intermittent 502's between an AWS ALB and Express Web Server\n"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("To prevent these errors make sure "),a("code",[t._v("keepAliveTimeout")]),t._v(" is greater than the AWS timeout for the ALB (Application Load Balancer).")]),t._v(" "),a("h2",{attrs:{id:"datp-logdestination"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-logdestination"}},[t._v("#")]),t._v(" datp.logDestination")]),t._v(" "),a("p",[a("code",[t._v("db")]),t._v(" | "),a("code",[t._v("datadog")]),t._v(" | "),a("code",[t._v("none")])]),t._v(" "),a("p",[t._v("This defines where DATP will write log entries.")]),t._v(" "),a("p",[t._v("During development it's easiest to write logs to the database using the "),a("code",[t._v("db")]),t._v(" option, where they can easily be viewed or cleared out using PhpMyadin.")]),t._v(" "),a("p",[a("code",[t._v("Datadog")]),t._v(" is a fast alternative to the database for production\nenvironments.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("none")]),t._v(" option is useful during performance testing, to determine\nwhich part of system load is caused by the logging.")]),t._v(" "),a("h2",{attrs:{id:"datp-loghealthcheck"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-loghealthcheck"}},[t._v("#")]),t._v(" datp.logHealthcheck")]),t._v(" "),a("p",[a("code",[t._v("true")]),t._v("|"),a("code",[t._v("false")]),a("br"),t._v("\nWhen true, each call to the healthcheck URL will be logged to the console.\nThis is useful to isolate errors when debugging errors with a load balancer or AWS target group.")]),t._v(" "),a("h2",{attrs:{id:"datp-maxwebhookattempts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-maxwebhookattempts"}},[t._v("#")]),t._v(" datp.maxWebhookAttempts")]),t._v(" "),a("p",[t._v("(default=5)"),a("br"),t._v("\nThis value specifies how many times DATP will attempt to call the webhook for a transaction before giving up.")]),t._v(" "),a("h2",{attrs:{id:"datp-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-name"}},[t._v("#")]),t._v(" datp.name")]),t._v(" "),a("p",[t._v("(deprecated)"),a("br"),t._v("\nName of the current node.")]),t._v(" "),a("h2",{attrs:{id:"datp-nodegroup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-nodegroup"}},[t._v("#")]),t._v(" datp.nodeGroup")]),t._v(" "),a("p",[t._v('String (default="master")')]),t._v(" "),a("p",[t._v("When you divide your application into multiple types of DATP node, this value is used to group instances of each node type.")]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"datp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nodeGroup"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"master"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"datp-port"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-port"}},[t._v("#")]),t._v(" datp.port")]),t._v(" "),a("p",[t._v("e.g. 4000")]),t._v(" "),a("p",[t._v("The HTTP port that MONDAT should use to access DATP endpoints.")]),t._v(" "),a("h2",{attrs:{id:"datp-protocol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-protocol"}},[t._v("#")]),t._v(" datp.protocol")]),t._v(" "),a("p",[t._v("(default https)\nThe protocol MONDAT should use to access DATP endpoints.")]),t._v(" "),a("h2",{attrs:{id:"datp-servemondat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-servemondat"}},[t._v("#")]),t._v(" datp.serveMondat")]),t._v(" "),a("p",[t._v("(default=false)"),a("br"),t._v("\nIf true the API server will also act as the website hosting MONDAT.\nThis requires that the MONDAT server be generated into the "),a("code",[t._v("dist")]),t._v(" directory.")]),t._v(" "),a("h2",{attrs:{id:"datp-servemondatapi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-servemondatapi"}},[t._v("#")]),t._v(" datp.serveMondatApi")]),t._v(" "),a("p",[t._v("(default=false)"),a("br"),t._v("\nWhen true, the server will enable the API endpoints used by MONDAT. Note that this is\ndifferent to "),a("code",[t._v("datp.serveMondat")]),t._v(", which causes the server to serve up the MONDAT clint/website.")]),t._v(" "),a("h2",{attrs:{id:"datp-statepersistanceinterval"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-statepersistanceinterval"}},[t._v("#")]),t._v(" datp.statePersistanceInterval")]),t._v(" "),a("p",[t._v("(default=15 seconds)")]),t._v(" "),a("p",[t._v("DATP normally stores transaction "),a("em",[t._v("state")]),t._v(" in REDIS, but if it is not accessed for a long time it is assumed the transaction has been put to sleep for an extended\nperiod, and the state will be persisted to long term storage.")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("statePersistanceInterval")]),t._v(" is the minimum number of seconds until\nDATP schedules the state to be moved to this long term storage.")]),t._v(" "),a("h2",{attrs:{id:"datp-webhook-credentials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datp-webhook-credentials"}},[t._v("#")]),t._v(" datp.webhook-credentials")]),t._v(" "),a("p",[t._v("When DATP calls a client's webhook to notify the status of a transaction, the result is signed with a digital signature. This section of the config file defines the credentials to sign and check\nthose signatures.")]),t._v(" "),a("p",[t._v("See [./DZDwebhook-background.html]! for details.\nSee the "),a("RouterLink",{attrs:{to:"/deployment/DZDwebhook-background.html#web-hooks"}},[t._v("Web Hooks")]),t._v(" section for details.")],1),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"datp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"webhook-credentials"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"publicKey"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-----BEGIN PUBLIC KEY-----\\n....\\n-----END PUBLIC KEY-----\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"privateKey"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-----BEGIN PRIVATE KEY-----\\n....\\n-----END PRIVATE KEY-----\\n"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ...\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"datadog-apikey"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datadog-apikey"}},[t._v("#")]),t._v(" datadog.apikey")]),t._v(" "),a("p",[t._v("The APIKey provided by Datadog. Only required if you are logging to Datadog.")]),t._v(" "),a("h2",{attrs:{id:"datadog-appkey"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datadog-appkey"}},[t._v("#")]),t._v(" datadog.appkey")]),t._v(" "),a("p",[t._v("The Application Key provided by Datadog. Only required if you are logging to Datadog.")]),t._v(" "),a("h2",{attrs:{id:"db-host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#db-host"}},[t._v("#")]),t._v(" db.host")]),t._v(" "),a("p",[t._v("Domain name for reading from the DATP database.")]),t._v(" "),a("h2",{attrs:{id:"db-writehost"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#db-writehost"}},[t._v("#")]),t._v(" db.writeHost")]),t._v(" "),a("p",[t._v("The endpoint for writing to the DATP database.")]),t._v(" "),a("h2",{attrs:{id:"db-port"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#db-port"}},[t._v("#")]),t._v(" db.port")]),t._v(" "),a("p",[t._v("(default=3306)")]),t._v(" "),a("p",[t._v("Port for DATP's database endpoint.")]),t._v(" "),a("h2",{attrs:{id:"db-user"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#db-user"}},[t._v("#")]),t._v(" db.user")]),t._v(" "),a("p",[t._v("Database user name.")]),t._v(" "),a("h2",{attrs:{id:"db-password"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#db-password"}},[t._v("#")]),t._v(" db.password")]),t._v(" "),a("p",[t._v("Database password.")]),t._v(" "),a("h2",{attrs:{id:"db-database"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#db-database"}},[t._v("#")]),t._v(" db.database")]),t._v(" "),a("p",[t._v("(default=datp_master)")]),t._v(" "),a("p",[t._v("The name of the database used by this DATP node group.")]),t._v(" "),a("h2",{attrs:{id:"db-connectionlimit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#db-connectionlimit"}},[t._v("#")]),t._v(" db.connectionLimit")]),t._v(" "),a("p",[t._v("(default=10)")]),t._v(" "),a("p",[t._v("This is the maximum number of connections in each connnection pool for the DATP database. Note that\nthere are two connection pools - one for reading and one for writing - so DATP will ultimately use double this\nnumber of connections.")]),t._v(" "),a("p",[t._v("When specifying this value consider the number of nodes you will have running, across all node groups, and ensure you\ndo not exceed the maximum number of connections allowed by the database.")]),t._v(" "),a("h2",{attrs:{id:"redis-host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-host"}},[t._v("#")]),t._v(" redis.host")]),t._v(" "),a("p",[t._v("(default=localhost)")]),t._v(" "),a("p",[t._v("Domain name of the REDIS endpoint.")]),t._v(" "),a("h2",{attrs:{id:"redis-port"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-port"}},[t._v("#")]),t._v(" redis.port")]),t._v(" "),a("p",[t._v("(default=6379)")]),t._v(" "),a("p",[t._v("Port of the REDIS endpoint.")]),t._v(" "),a("h2",{attrs:{id:"redis-username"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-username"}},[t._v("#")]),t._v(" redis.username")]),t._v(" "),a("p",[t._v("(default=null)")]),t._v(" "),a("p",[t._v("User name used to access REDIS.")]),t._v(" "),a("h2",{attrs:{id:"redis-password"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-password"}},[t._v("#")]),t._v(" redis.password")]),t._v(" "),a("p",[t._v("(default=null)")]),t._v(" "),a("p",[t._v("Password used to access REDIS.")])])}),[],!1,null,null,null);s.default=n.exports}}]);