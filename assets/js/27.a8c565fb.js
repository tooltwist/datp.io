(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{487:function(t,e,s){t.exports=s.p+"assets/img/step-definition-0.b94b1e17.png"},488:function(t,e,s){t.exports=s.p+"assets/img/step-definition-1.4aec51c4.png"},489:function(t,e,s){t.exports=s.p+"assets/img/step-definition-2.c0d7d6c7.png"},617:function(t,e,s){"use strict";s.r(e);var a=s(60),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"step-definitions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-definitions"}},[t._v("#")]),t._v(" Step definitions")]),t._v(" "),a("h2",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[t._v("#")]),t._v(" Parameters")]),t._v(" "),a("p",[t._v("As seen in the section on the MONDAT\n"),a("RouterLink",{attrs:{to:"/guide/DZDmondat-pipelines.html#pipeline-definition"}},[t._v("pipeline page")]),t._v(",\na pipeline can allow the user to specify parameters to affect it's operation.\nThis allows steps to be reused in multiple pipelines with varying functionality.")],1),t._v(" "),a("p",[t._v("The specific parameters recognised by the step is\nat the discretion of the applicatin code.\nThe step might take no parameters, or it might have a long list of parameters.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(487),alt:"DATP Node"}})]),t._v(" "),a("h2",{attrs:{id:"default-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#default-values"}},[t._v("#")]),t._v(" Default values")]),t._v(" "),a("p",[t._v("The default parameter values for a step can be defined by the step by\nproviding a "),a("code",[t._v("defaultDefinition")]),t._v(" function.\nThe pipeline definition page displays these parameters and let's them\nbe edited as JSON.")]),t._v(" "),a("p",[t._v("Your step class will receive this definition\nat the time it is instantiated, and it can be used the influence ther behavior\nof business logic in the "),a("code",[t._v("invoke")]),t._v(" function.")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyStep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Step")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  #min\n  #max\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("definition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("#min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" definition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("#max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" definition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("instance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do something with this.#min and this.#max")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defaultDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("p",[t._v("In the application code for the step they can be retrieved")]),t._v(" "),a("h2",{attrs:{id:"user-interface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#user-interface"}},[t._v("#")]),t._v(" User interface")]),t._v(" "),a("p",[t._v("In addition, the step can give hints for a user interface for editing those\nparameters.")]),t._v(" "),a("p",[t._v("In the following example, the default values are defined initially,\nand then underscore-prefixed variables with the same names define\nhow the user interface should look.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(488),alt:"DATP Node"}})]),t._v(" "),a("p",[t._v("For the a UI field definition, the format is:\n"),a("code",[t._v('_<field-name>: "<field-type>:<label>"')]),t._v(".")]),t._v(" "),a("p",[t._v("The following shows the step above being edited on the pipelione definition page.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(489),alt:"DATP Node"}})]),t._v(" "),a("p",[t._v("The following table explains the currently availabel fields types.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("text")]),t._v(" "),a("td",[t._v("Text field")])]),t._v(" "),a("tr",[a("td",[t._v("textarea")]),t._v(" "),a("td",[t._v("Multiline text field")])]),t._v(" "),a("tr",[a("td",[t._v("checkbox")]),t._v(" "),a("td",[t._v("Boolean value")])]),t._v(" "),a("tr",[a("td",[t._v("select")]),t._v(" "),a("td",[t._v("Dropdown menu of values. The label is followed by "),a("code",[t._v("value=label")]),t._v(" pairs, as in the example above")])]),t._v(" "),a("tr",[a("td",[t._v("standard-form")]),t._v(" "),a("td",[t._v("The UI will allow the user to select one of the forms defined on the MONDAT "),a("strong",[t._v("Generic API")]),t._v(" page.")])])])]),t._v(" "),a("div",{staticClass:"custom-block info"},[a("p",{staticClass:"custom-block-title"},[t._v("INFO")]),a("p",[t._v("Please note that these names and types only define the user input fields\non the pipeline editor,\nand convey no meaning other than guiding the user input.\nUltimately all step definitions are stored as JSON, and it is the\nresponsibility of the code in your step to decide how to interpret the\ninformation your step has requested.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);