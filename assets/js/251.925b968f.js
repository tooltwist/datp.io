(window.webpackJsonp=window.webpackJsonp||[]).push([[251],{775:function(t,e,s){"use strict";s.r(e);var r=s(60),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"error-messages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error-messages"}},[t._v("#")]),t._v(" Error Messages")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Optional Feature")]),t._v(" "),s("p",[t._v("Many organisations have defined standards for how error messages should be handled.\nThis is an optional feature, so feel free to use it or not use it accordingly.")])]),t._v(" "),s("p",[t._v("ZZZZZZ https://mail.google.com/mail/u/1/#search/registerErrorLibrary/QgrcJHsbgZLzrtRfMQJCNWRWBZMfsLpnjSl")]),t._v(" "),s("h2",{attrs:{id:"libraries-of-errors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#libraries-of-errors"}},[t._v("#")]),t._v(" Libraries of Errors")]),t._v(" "),s("h2",{attrs:{id:"registering-a-library"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#registering-a-library"}},[t._v("#")]),t._v(" Registering a library")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" generateErrorByName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" registerErrorLibrary "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./lib/errorCodes'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" errors_datp_EN "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./lib/errors-datp-EN'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" errors_datp_FIL "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./lib/errors-datp-FIL'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Register our DATP error codes")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerErrorLibrary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("errors_datp_EN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerErrorLibrary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("errors_datp_FIL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Start the server...")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("p",[t._v("Here's a snippet of errors-datp-EN.js (It could also be a JSON file without the export).")]),t._v(" "),s("p",[t._v("2022-04-04_17-15-08.png")]),t._v(" "),s("p",[t._v("and errors-datp-FIL.js")]),t._v(" "),s("p",[t._v("2022-04-04_17-14-17.png")]),t._v(" "),s("p",[t._v("Translating Error Messages\nTranslations can be done by a non-technical person, editing a JSON file instead of code. Just give them a copy of the default version of the file and ask them to replace the English with the new language, then register the file before server startup.")]),t._v(" "),s("p",[t._v("Generating Errors in the Code\nThis is similar to your generateError function, but to simplify matching up the error libraries and the code, I refer to the errors by their text name:")]),t._v(" "),s("p",[t._v("const { httpStatus, message } = DATP.generateErrorByName('FIELD_IS_REQUIRED', { field: 'data' }, preferredLanguage)")]),t._v(" "),s("p",[t._v("Any number of data values can be provided to substitute into the error message.")]),t._v(" "),s("p",[t._v("Example Error Messages\nI've added a feature that I've found streamlines development.")]),t._v(" "),s("p",[t._v("The dev can refer to errors that don't exist yet, and put an 'example message' in the code while they concentrate on application logic...")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" error "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DATP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("generateErrorByName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ERROR_NO_DONUTS'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("flavor")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cherry'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'large'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          preferredLanguage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Emergency, we have run out of {{flavor}} donuts!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("error=")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v('That "Emergency...." message is only used until the error is properly added to the error library.')]),t._v(" "),s("p",[t._v("When it is first run it will return the following error object, which is not quite right, but is okay for while you are still developing:")]),t._v(" "),s("p",[t._v("2022-04-04_16-50-01.png")]),t._v(" "),s("p",[t._v("More importantly, a code snippet is written to the console every time it is run, until the error is added to the error library.")]),t._v(" "),s("p",[t._v("Error 'ERROR_NO_DONUTS' was not found in any of the error libraries.\nPlease edit the following JSON snippet and add it to your error library:")]),t._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"code"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ERROR_NO_DONUTS"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ERROR_NO_DONUTS"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"httpStatus"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"400"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Emergency, we have run out of {{flavor}} donuts! - {{size}}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("At a convenient time, we can cut and paste that and any other errors and append them to our errors JSON file.")]),t._v(" "),s("p",[t._v("Here I've made a few changes - given it an error code, changed the httpStatus, and changed the error message to include the size of the donut.")]),t._v(" "),s("p",[t._v("2022-04-04_16-45-26.png")]),t._v(" "),s("p",[t._v("With the error now in the JSON file, the correct error is then shown in the application, and the example message in the code is ignored.")]),t._v(" "),s("p",[t._v("2022-04-04_16-48-18.png")]),t._v(" "),s("p",[t._v("We prefer this approach, because there is nothing more defocusing than having to run back and forth to the error handling code to check if error messages exist, while trying to concentrate on writing business logic. This allows a developer to write the code first, and then worry about putting the error messages in the errors file later.")]),t._v(" "),s("h3",{attrs:{id:"source-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#source-code"}},[t._v("#")]),t._v(" Source code")]),t._v(" "),s("p",[t._v("If you'd like to understand this error handling library in more detail, you can view the source code\nat "),s("code",[t._v("node_modules/@tooltwist/datp/lib/errorCodes.js")]),t._v(".\nIf you come up with improvements or suggestions feel free to contribute them to the project.")])])}),[],!1,null,null,null);e.default=a.exports}}]);