(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{476:function(e,t,r){e.exports=r.p+"assets/img/errors-request-1.ef27d4c0.png"},477:function(e,t,r){e.exports=r.p+"assets/img/errors-request-2.3df4f868.png"},478:function(e,t,r){e.exports=r.p+"assets/img/errors-request-3.9f7c5f3f.png"},479:function(e,t,r){e.exports=r.p+"assets/img/errors-request-4.6085de4c.png"},480:function(e,t,r){e.exports=r.p+"assets/img/errors-1.655081a1.png"},481:function(e,t,r){e.exports=r.p+"assets/img/errors-2.154252eb.png"},482:function(e,t,r){e.exports=r.p+"assets/img/errors-3.7db65fb2.png"},483:function(e,t,r){e.exports=r.p+"assets/img/errors-4.43e92874.png"},484:function(e,t,r){e.exports=r.p+"assets/img/errors-5.3e43ca2d.png"},609:function(e,t,r){"use strict";r.r(t);var s=r(60),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"error-messages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error-messages"}},[e._v("#")]),e._v(" Error messages")]),e._v(" "),s("p",[e._v("DATP provides a few useful functions for generating error messages\nin multiple languages, and also allowing the DATP error messages to be\ncustomized to match your application.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("If your application already uses an i18n or similar solution then you probably\ndon't need to read further. These libraries are optional - use them if you\nfeel they are beneficial, skip them if you don't.")])]),e._v(" "),s("h2",{attrs:{id:"objectives"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#objectives"}},[e._v("#")]),e._v(" Objectives")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("To take the error messages out of the code and put them in JSON files that are easy to translate.")])]),e._v(" "),s("li",[s("p",[e._v("Create libraries of errors for different subsystems. For example, one for DATP, one for you application, and one each for any subsystems you create.")])]),e._v(" "),s("li",[s("p",[e._v("Allow each user to have a preferred language. Error messages are displayed in that language if available, or else in the default language (i.e. English).")])])]),e._v(" "),s("h2",{attrs:{id:"in-use"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#in-use"}},[e._v("#")]),e._v(" In Use")]),e._v(" "),s("p",[e._v("When you start a DATP transaction you can specify a preferred language.\nThis will usually come from a user database, or whatever other method you\nhave for storing user credentials.\nIn this first example we call a transaction requesting English.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(476),alt:"DATP Node"}})]),e._v(" "),s("p",[e._v("And we receive an English error message in our reply...")]),e._v(" "),s("p",[s("img",{attrs:{src:r(477),alt:"DATP Node"}})]),e._v(" "),s("p",[e._v("If we make the same request specifying Filipino as our preferred language...\n"),s("img",{attrs:{src:r(478),alt:"DATP Node"}})]),e._v(" "),s("p",[e._v("...we get this reply...")]),e._v(" "),s("p",[s("img",{attrs:{src:r(479),alt:"DATP Node"}})]),e._v(" "),s("p",[e._v("(For any native Tagalog speakers, I apologise is the translation is wrong!)")]),e._v(" "),s("h2",{attrs:{id:"error-libraries"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error-libraries"}},[e._v("#")]),e._v(" Error libraries")]),e._v(" "),s("p",[e._v("The language files can be either .json or .js files, and get registered at application startup.\nIn these files we specify the following:")]),e._v(" "),s("ul",[s("li",[e._v("An application 'scope' that prevents name collisions with other error libraries.")]),e._v(" "),s("li",[e._v("The language of the error library.")]),e._v(" "),s("li",[e._v("A short description.")])]),e._v(" "),s("p",[e._v("For each error we then define:")]),e._v(" "),s("ul",[s("li",[e._v("A unique error code. It doesn't matter what this is - it just provides a\nlanguage independant code that can be easily quoted when errors are reported.")]),e._v(" "),s("li",[e._v("An easy to remember name for the error, that can be used in the code when"),s("br"),e._v("\ngenerating this error.")]),e._v(" "),s("li",[e._v("An http status, for cases where the error is returned over http.")]),e._v(" "),s("li",[e._v("The message in the specified language, optionally containing field replacements.")])]),e._v(" "),s("p",[e._v("Here are a couple of snippets from errors-datp-EN.js and errors-datp-FIL.js.\nNote that these could also be a JSON files if you remove the export statements.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(480),alt:"DATP Node"}})]),e._v(" "),s("p",[s("img",{attrs:{src:r(481),alt:"DATP Node"}})]),e._v(" "),s("p",[e._v("Error libraries are registered in the code prior to starting your application server.")]),e._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" generateErrorByName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" registerErrorLibrary "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./lib/errorCodes'")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" errors_datp_EN "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./lib/errors-datp-EN'")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" errors_datp_FIL "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./lib/errors-datp-FIL'")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Register our DATP error codes")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("registerErrorLibrary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("errors_datp_EN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("registerErrorLibrary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("errors_datp_FIL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Start the server...")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("h2",{attrs:{id:"translating"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#translating"}},[e._v("#")]),e._v(" Translating")]),e._v(" "),s("p",[e._v("Translations can be done by a non-technical person, bu editing the JSON error library files (instead of code). Just give them a copy of the default version of the file and ask them to replace the English with the new language, then register their new library\nbefore server startup.")]),e._v(" "),s("h2",{attrs:{id:"generating-errors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generating-errors"}},[e._v("#")]),e._v(" Generating errors")]),e._v(" "),s("p",[e._v("Error messages are generated in application code using "),s("code",[e._v("DATP.generateErrorByName")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" httpStatus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" message "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("DATP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("generateErrorByName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'FIELD_IS_REQUIRED'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("field")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'data'")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    preferredLanguage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("p",[e._v("The "),s("code",[e._v("FIELD_IS_REQUIRED")]),e._v(" is an application defined error name. You can create as\nmany error names as you wish - they are just treated as unique strings with\nno particular meaning.")]),e._v(" "),s("div",{pre:!0},[s("p",[e._v("Any number of data values can be provided, and are substituted into the error message\nwherever the pattern {{fieldname}} is found in the message retreived from the error library.")])]),s("h2",{attrs:{id:"during-development"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#during-development"}},[e._v("#")]),e._v(" During Development")]),e._v(" "),s("p",[e._v("We've included a feature that we've found streamlines development.")]),e._v(" "),s("p",[e._v("While a developer is concentrating on writing application code,\nthey can refer to errors that are not defined in the error library yet,\nand put an example message that can be replaced later.")]),e._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" error "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[e._v("DATP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("generateErrorByName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'ERROR_NO_DONUTS'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("flavor")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'cherry'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("size")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'large'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    preferredLanguage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Emergency, we have run out of {{flavor}} donuts!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[e._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("error=")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[e._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v('The optional last parameter, the "Emergency....donuts" message,\nis used as the error message only until the error is properly added\nto the error library. In the mean time the developer can concentrate\non writing and testing the application.')]),e._v(" "),s("p",[e._v("When it is initially used it will return the following error object, which\nhas the wrong error code and status, and possibly a wrong message, but\nwill suffice because the code is still under development.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(482),alt:"DATP Node"}})]),e._v(" "),s("p",[e._v("At some stage these errors will need to be added to the error library.\nTo make sure that is not overlooked, and to make it easy, a code snippet\nis written to the console every time it is run, until the\nerror is added to the error library.")]),e._v(" "),s("blockquote",[s("p",[e._v("Error 'ERROR_NO_DONUTS' was not found in any of the error libraries."),s("br"),e._v("\nPlease edit the following JSON snippet and add it to your error library:")]),e._v(" "),s("p",[e._v("{"),s("br"),e._v('\n"code": "ERROR_NO_DONUTS",'),s("br"),e._v('\n"name": "ERROR_NO_DONUTS",'),s("br"),e._v('\n"httpStatus": "400",'),s("br"),e._v('\n"message": "Emergency, we have run out of '+e._s(e.flavor)+" donuts! - "+e._s(e.size)+'",'),s("br"),e._v("\n}")])]),e._v(" "),s("p",[e._v("At a convenient time, we can cut and paste that snippet and any other errors from the\nlog file or javascript console and append them to our errors JSON file.")]),e._v(" "),s("p",[e._v("In the exampole below it has been added to the error library with updated details - given an error code and an httpStatus, and changed the error message to include the size of the donut.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(483),alt:"DATP Node"}})]),e._v(" "),s("p",[e._v("It now generates the desired error message...")]),e._v(" "),s("p",[s("img",{attrs:{src:r(484),alt:"DATP Node"}})])])}),[],!1,null,null,null);t.default=a.exports}}]);